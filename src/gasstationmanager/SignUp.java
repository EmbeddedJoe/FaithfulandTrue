/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gasstationmanager;

import databases.StaffRecordsConnector;
import java.sql.PreparedStatement;
import java.util.Arrays;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Joe Mwega
 */
public class SignUp extends javax.swing.JFrame {
    private PreparedStatement PreparedStatement;

    /**
     * Creates new form SignUp
     */
    public SignUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        pwdPassword = new javax.swing.JPasswordField();
        pwdConfirmPassword = new javax.swing.JPasswordField();
        lblWorkID = new javax.swing.JLabel();
        txtWorkID = new javax.swing.JTextField();
        lblPosition = new javax.swing.JLabel();
        txtStaffPosition = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");

        jLabel3.setText("Username");

        jLabel4.setText("Password");

        jLabel5.setText("Confirm Password");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        pwdPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPasswordActionPerformed(evt);
            }
        });

        pwdConfirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdConfirmPasswordActionPerformed(evt);
            }
        });

        lblWorkID.setText("Work ID");

        txtWorkID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWorkIDActionPerformed(evt);
            }
        });

        lblPosition.setText("Position");

        txtStaffPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStaffPositionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(btnSave)
                        .addGap(49, 49, 49)
                        .addComponent(btnRefresh)
                        .addGap(52, 52, 52)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
                            .addComponent(jLabel5)
                            .addComponent(lblWorkID)
                            .addComponent(lblPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtWorkID, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(txtUsername)
                            .addComponent(pwdPassword)
                            .addComponent(pwdConfirmPassword)
                            .addComponent(txtLastName)
                            .addComponent(txtFirstName)
                            .addComponent(txtStaffPosition))))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWorkID)
                    .addComponent(txtWorkID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(lblPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtStaffPosition))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwdConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        String staffFirstName = txtFirstName.getText();
        if (!checkFirstName(staffFirstName)) {
            JOptionPane.showMessageDialog(txtFirstName, "Please input the first name", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        String staffLastName = txtLastName.getText();
        if (!checkLastName(staffLastName)) {
            JOptionPane.showMessageDialog(txtLastName, "Please input the last name", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtWorkIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWorkIDActionPerformed
        String staffWorkID = txtWorkID.getText();
        if (!checkWorkID(staffWorkID)) {
            JOptionPane.showMessageDialog(txtWorkID, "Please input a valid empoloyment ID", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_txtWorkIDActionPerformed

    private void pwdPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPasswordActionPerformed
        char[] inputPassWord = pwdPassword.getPassword();
        if (!checkPassword(inputPassWord)) {
            JOptionPane.showMessageDialog(pwdPassword, "The password must be 6 characters and above", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_pwdPasswordActionPerformed

    private void pwdConfirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdConfirmPasswordActionPerformed
        char[] inputConfirmPassWord = pwdConfirmPassword.getPassword();
        char[] inputPassWord = pwdPassword.getPassword();
        if (!checkConfirmPassword(inputConfirmPassWord, inputPassWord)) {
            JOptionPane.showMessageDialog(pwdConfirmPassword, "The field is blank or the passwords do not match", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_pwdConfirmPasswordActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        String staffUserName = txtUsername.getText();
        if(!checkUsername(staffUserName)) {
            JOptionPane.showMessageDialog(txtUsername, "Please enter a username", "Input Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String FirstName = txtFirstName.getText();
        String LastName = txtLastName.getText();
        String WorkID = txtWorkID.getText();
        String Position = txtStaffPosition.getText();
        String Username = txtUsername.getText();
        char[] Password = pwdPassword.getPassword();
        StaffMembers myMember = new StaffMembers(FirstName,LastName,WorkID,Position,Username,Password);
        
        StaffRecordsConnector myConnector = new StaffRecordsConnector();
        myConnector.createConnection();
        PreparedStatement ps = myConnector.createStatement(myMember);
        myConnector.insertDetails(ps); //erro here
        myConnector.closeConnection(ps);
        JOptionPane.showMessageDialog(txtLastName, "You have registered successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        txtFirstName.setText("");
        txtLastName.setText("");
        txtWorkID.setText("");
        txtStaffPosition.setText("");
        txtUsername.setText("");
        pwdPassword.setText("");
        pwdConfirmPassword.setText("");
        
        
        
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
        
        
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtStaffPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStaffPositionActionPerformed
        String staffPosition = txtStaffPosition.getText();
        if (!checkStaffPosition(staffPosition)) {
            JOptionPane.showMessageDialog(txtStaffPosition, "Please enter a valid staff position", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_txtStaffPositionActionPerformed

    private boolean checkStaffPosition(String staffPosition) {
        boolean isValid = true;
        if((staffPosition.equals(""))|| !(Pattern.matches("^[A-Z,a-z]+$", staffPosition))) {
            isValid = false;
        }
        return isValid;
    }
    
    private boolean checkUsername(String staffUserName) {
        boolean isValid = true;
        if(staffUserName.equals("")){
            isValid = false;
        }
        return isValid;
    }
    
    private boolean checkConfirmPassword(char[] inputConfirmPassWord, char[] inputPassWord) {
        boolean isValid = true;
        if ( (!Arrays.equals(inputConfirmPassWord, inputPassWord)) || (inputConfirmPassWord.equals(""))) {
            isValid = false;
        }
        return isValid;
    }
    
    private boolean checkPassword(char [] inputPassWord) {
        boolean isValid = true;
        if ((inputPassWord.length < 6) || (inputPassWord.equals(""))) {
           isValid = false;
        }
        return isValid;
    }
    
    private boolean checkFirstName(String staffFirstName){
        boolean isValid = true;
               
        if ((staffFirstName.equals("")) || !(Pattern.matches("^[A-Z,a-z]+$", staffFirstName))) {            
            isValid = false;
            
        }
        return isValid;
    }
    
    private boolean checkLastName(String staffLastName){
        boolean isValid = true;
                
        if ((staffLastName.equals("")) || !(Pattern.matches("^[A-Z,a-z]+$", staffLastName))) {            
            isValid = false;
            
        }
        return isValid;
    }
    
    public boolean checkWorkID(String staffWorkID) {
        boolean isValid = true;
        
        if ((staffWorkID.equals("")) || !(Pattern.matches("^[0-9]+$", staffWorkID))) {
            
            isValid = false;
            
        }
        return isValid;
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblWorkID;
    private javax.swing.JPasswordField pwdConfirmPassword;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtStaffPosition;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtWorkID;
    // End of variables declaration//GEN-END:variables
}
